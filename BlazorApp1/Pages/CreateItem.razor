@page "/CreateItem"
<h3>Create Item</h3>

@using Data.Entities
@using Shared.DAO
@using BlazorApp1.HttpClient.ItemHttpClient
@inject IItemHttpClient ItemService


<style>
    .item-form {
        font-size: 18px;
        color: black;
        border-bottom: 1px solid black;
    }
</style>

<form class="item-form" @onsubmit="HandleValidSubmit">
    <div class="form-group">
        <label for="type">Type:</label>
        <input type="text" class="form-control" id="type" @bind-value="@_item.Type" required>
    </div>
    <div class="form-group">
        <label for="weight">Weight:</label>
        <input type="number" class="form-control" id="weight" @bind-value="@_item.Weight" required>
    </div>
    <div class="form-group">
        <labe for="sortingCategory">Sorting Category:</labe>
    </div>
    <div class="form-group">
    <InputSelect @bind-Value="_item.SoteringCategory">
        @foreach (var category in Enum.GetValues(typeof(SorteringCategory)))
        {
            <option value="@category">@category.ToString()</option>
        }

    </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Create Item</button>
</form>


@if (_successMessage)
{
    <div class="alert alert-success" role="alert">
        Item has been Added!
    </div>
}

@code {
    private Item _item = new Item();
    private bool _successMessage = false;

    private async Task HandleValidSubmit()
    {
        CreateItemDAO itemDao = new CreateItemDAO();

        itemDao.Type = _item.Type;
        itemDao.Weight = _item.Weight;
        itemDao.SoteringCategory = _item.SoteringCategory;

        _item = await ItemService.CreateItem(itemDao);

        _successMessage = true;
        await Task.Delay(5000);
        _successMessage = false;

        StateHasChanged();
    }

}